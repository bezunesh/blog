Description: >
  This template creates a VPC, InternetGateway, a Public Subnet, an IAM Role, 
  EC2 launch configuration and an Auto-scaling group.

Parameters:
  AppName:
    Description: The name of the app
    Type: String
    Default: MyWebApp
  VpcCIDR:
    Description: CIDR IP range for the VPC
    Type: String
    Default: 10.0.0.0/16
  PublicSubnetCIDR:
      Description: CIDR IP range for the public subnet
      Type: String
      Default: 10.0.0.0/24

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      Tags: 
        - Key: Name 
          Value: !Ref AppName
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref AppName
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC       
  PublicSubnet: 
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnetCIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name 
          Value: !Sub ${AppName} Public Subnet
  S3ReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Path: "/"
  S3ReadOnlyProfile: 
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Path: "/"
      Roles: 
        - !Ref S3ReadOnlyRole
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow incoming http request to our host and outgoing traffic to any destination
      VpcId:
        Fn::ImportValue:
          !Sub "${AppName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      KeyName: "bezu-aws"
      ImageId: ami-083654bd07b5da81d
      IamInstanceProfile: !Ref S3ReadOnlyProfile
      SecurityGroups:
        - Ref: WebServerSecGroup
      InstanceType: t2.micro
      BlockDeviceMappings:
        - DeviceName: "/dev/sda1"
          Ebs:
            VolumeSize: '8'
      UserData: !Base64 |
          #!/bin/bash
          apt update -y
          apt install -y awscli nginx
          aws s3 cp s3://bezu-bucket/index.html  /var/www/html/index.html
          systemctl restart nginx
  WebAppAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue: 
          !Sub "${AppName}-PUB-SN"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: '1'
      MaxSize: '2'



